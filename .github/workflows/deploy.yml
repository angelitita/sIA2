name: Generar y Publicar Nuevo Post

on:
  # Permite ejecutarlo manualmente desde la pesta√±a Actions en GitHub
  workflow_dispatch:
  # Ejecuta el script autom√°ticamente cada 6 horas.
  # Para 3-5 posts al d√≠a, puedes ajustar esto. Por ejemplo, `*/4` para cada 4 horas.
  schedule:
    - cron: '0 */6 * * *'
    
permissions:
  contents: write
  
jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      # 1. Clona tu repositorio para tener acceso a los archivos
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Configura el entorno de Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Instala las librer√≠as necesarias
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Ejecuta el script de Python para generar el contenido
      #    Usa un "secret" de GitHub para la API Key, ¬°nunca la pongas directamente!
      - name: Generar nuevo post
        run: python generar_post.py
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      # 5. Configura Git y sube los nuevos archivos generados al repositorio
      - name: Hacer commit de los archivos generados
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ü§ñ Nuevo post automatizado: $(date)"
          token: ${{ secrets.PAT }}
